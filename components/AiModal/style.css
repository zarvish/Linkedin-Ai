/*
This CSS uses the Tailwind CSS @apply directive to integrate utility classes directly into custom components.
Using @apply helps maintain consistency, improve readability, and make development faster by reusing Tailwindâ€™s
well-structured utility classes. It also follows DRY principles, reducing code duplication. By relying on Tailwind's
utility-first approach, we can ensure scalable, maintainable, and efficient styling, especially in components like
modals, buttons, and message containers.
*/


/* Modal */
.modal {
    @apply fixed top-1/2 left-1/2 bg-gray-50 p-5 shadow-lg z-[9999] w-[50%] rounded-lg;
    transform: translate(-50%, -50%);
}


/* Message Container */
.message-container {
    @apply mb-2.5 flex flex-col max-h-72 overflow-y-scroll;
}

/* Input Field */
.input-field {
    @apply w-full p-2.5 mb-5 rounded-md;
    border: 1px solid #C1C7D0!important;
    box-shadow: none!important;
}

/* Button Container */
.button-container {
    @apply flex justify-end;
}

/* Generate Button */
.generate-button {
    @apply flex items-center p-2.5 bg-blue-500 text-white border-none rounded-md cursor-pointer;
}

/* Insert Button */
.insert-button {
    @apply flex items-center p-2.5 bg-transparent text-gray-500 border border-solid border-gray-500 rounded-md cursor-pointer mr-2.5;
}

/* Regenerate Button */
.regenerate-button {
    @apply flex items-center p-2.5 bg-blue-500 text-white border-none rounded-md cursor-pointer;
}

/* User Message */
.user-message {
    @apply self-end bg-gray-200 text-gray-500 p-2.5 rounded-xl mb-2.5 max-w-[70%];
}

/* AI Response */
.ai-response {
    @apply bg-blue-100 text-gray-500 p-2.5 rounded-xl mb-2.5 max-w-[70%] transition-opacity duration-300 ease-in-out opacity-100;
}